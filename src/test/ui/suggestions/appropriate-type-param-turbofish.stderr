error[E0283]: type annotations needed
  --> $DIR/appropriate-type-param-turbofish.rs:3:35
   |
LL |         vec![1, 2, 3].into_iter().collect();
   |                                   ^^^^^^^ cannot infer type for type parameter `B` declared on the associated function `collect`
   |
   = note: cannot satisfy `_: std::iter::FromIterator<i32>`
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::vec::Vec<_>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::string::String>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::collections::HashMap<_, _, _>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::collections::HashSet<_, _>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::path::PathBuf>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::sys_common::wtf8::Wtf8Buf>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::option::Option<_>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::result::Result<_, _>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::boxed::Box<[_]>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::borrow::Cow<'_, str>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::borrow::Cow<'_, [_]>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::borrow::Cow<'_, str>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::collections::BinaryHeap<_>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::collections::BTreeMap<_, _>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::collections::LinkedList<_>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::collections::VecDeque<_>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::rc::Rc<[_]>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::sync::Arc<[_]>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<std::collections::BTreeSet<_>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<hashbrown::map::HashMap<_, _, _>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<hashbrown::set::HashSet<_, _>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<gimli::read::cfi::RegisterRuleMap<_>>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<gimli::read::abbrev::Attributes>();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec![1, 2, 3].into_iter().collect::<()>();
   |                                          ^^^^^^

error[E0283]: type annotations needed
  --> $DIR/appropriate-type-param-turbofish.rs:6:41
   |
LL |         vec!["a", "b", "c"].into_iter().collect();
   |                                         ^^^^^^^ cannot infer type for type parameter `B` declared on the associated function `collect`
   |
   = note: cannot satisfy `_: std::iter::FromIterator<&str>`
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::vec::Vec<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::string::String>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::collections::HashMap<_, _, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::collections::HashSet<_, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::path::PathBuf>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::sys_common::wtf8::Wtf8Buf>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::option::Option<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::result::Result<_, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::boxed::Box<[_]>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::borrow::Cow<'_, [_]>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::borrow::Cow<'_, str>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::borrow::Cow<'_, str>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::collections::BinaryHeap<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::collections::BTreeMap<_, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::collections::LinkedList<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::collections::VecDeque<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::rc::Rc<[_]>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::sync::Arc<[_]>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<std::collections::BTreeSet<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<hashbrown::map::HashMap<_, _, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<hashbrown::set::HashSet<_, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<gimli::read::cfi::RegisterRuleMap<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<gimli::read::abbrev::Attributes>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!["a", "b", "c"].into_iter().collect::<()>();
   |                                                ^^^^^^

error[E0283]: type annotations needed
  --> $DIR/appropriate-type-param-turbofish.rs:9:41
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect();
   |                                         ^^^^^^^ cannot infer type for type parameter `B` declared on the associated function `collect`
   |
   = note: cannot satisfy `_: std::iter::FromIterator<char>`
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::vec::Vec<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::string::String>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::collections::HashMap<_, _, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::collections::HashSet<_, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::path::PathBuf>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::sys_common::wtf8::Wtf8Buf>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::option::Option<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::result::Result<_, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::boxed::Box<[_]>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::borrow::Cow<'_, str>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::borrow::Cow<'_, [_]>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::borrow::Cow<'_, str>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::collections::BinaryHeap<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::collections::BTreeMap<_, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::collections::LinkedList<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::collections::VecDeque<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::rc::Rc<[_]>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::sync::Arc<[_]>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<std::collections::BTreeSet<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<hashbrown::map::HashMap<_, _, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<hashbrown::set::HashSet<_, _>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<gimli::read::cfi::RegisterRuleMap<_>>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<gimli::read::abbrev::Attributes>();
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider specifying the type argument in the method call
   |
LL |         vec!['a', 'b', 'c'].into_iter().collect::<()>();
   |                                                ^^^^^^

error[E0283]: type annotations needed
  --> $DIR/appropriate-type-param-turbofish.rs:14:43
   |
LL |         let _ = vec![1, 2, 3].into_iter().collect();
   |                                           ^^^^^^^ cannot infer type for type parameter `B` declared on the associated function `collect`
   |
   = note: cannot satisfy `_: std::iter::FromIterator<i32>`
help: consider giving this binding a type
   |
LL |         let _: std::vec::Vec<_> = vec![1, 2, 3].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^
LL |         let _: std::string::String = vec![1, 2, 3].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^^^^
LL |         let _: std::collections::HashMap<_, _, _> = vec![1, 2, 3].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
LL |         let _: std::collections::HashSet<_, _> = vec![1, 2, 3].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     and 20 other candidates

error[E0283]: type annotations needed
  --> $DIR/appropriate-type-param-turbofish.rs:17:49
   |
LL |         let _ = vec!["a", "b", "c"].into_iter().collect();
   |                                                 ^^^^^^^ cannot infer type for type parameter `B` declared on the associated function `collect`
   |
   = note: cannot satisfy `_: std::iter::FromIterator<&str>`
help: consider giving this binding a type
   |
LL |         let _: std::vec::Vec<_> = vec!["a", "b", "c"].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^
LL |         let _: std::string::String = vec!["a", "b", "c"].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^^^^
LL |         let _: std::collections::HashMap<_, _, _> = vec!["a", "b", "c"].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
LL |         let _: std::collections::HashSet<_, _> = vec!["a", "b", "c"].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     and 20 other candidates

error[E0283]: type annotations needed
  --> $DIR/appropriate-type-param-turbofish.rs:20:49
   |
LL |         let _ = vec!['a', 'b', 'c'].into_iter().collect();
   |                                                 ^^^^^^^ cannot infer type for type parameter `B` declared on the associated function `collect`
   |
   = note: cannot satisfy `_: std::iter::FromIterator<char>`
help: consider giving this binding a type
   |
LL |         let _: std::vec::Vec<_> = vec!['a', 'b', 'c'].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^
LL |         let _: std::string::String = vec!['a', 'b', 'c'].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^^^^
LL |         let _: std::collections::HashMap<_, _, _> = vec!['a', 'b', 'c'].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
LL |         let _: std::collections::HashSet<_, _> = vec!['a', 'b', 'c'].into_iter().collect();
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     and 20 other candidates

error[E0283]: type annotations needed
  --> $DIR/appropriate-type-param-turbofish.rs:38:5
   |
LL | fn x<X: T>() -> X {
   |         - required by this bound in `x`
...
LL |     x();
   |     ^ cannot infer type for type parameter `X` declared on the function `x`
   |
   = note: cannot satisfy `_: T`
help: consider specifying the type argument in the function call
   |
LL |     x::<S>();
   |      ^^^^^

error[E0283]: type annotations needed
  --> $DIR/appropriate-type-param-turbofish.rs:42:13
   |
LL | fn x<X: T>() -> X {
   |         - required by this bound in `x`
...
LL |     let _ = x();
   |             ^ cannot infer type for type parameter `X` declared on the function `x`
   |
   = note: cannot satisfy `_: T`
help: consider giving this binding the explicit type `S`
   |
LL |     let _: S = x();
   |          ^^^
help: consider specifying the type argument in the function call
   |
LL |     let _ = x::<S>();
   |              ^^^^^

error: aborting due to 8 previous errors

For more information about this error, try `rustc --explain E0283`.
