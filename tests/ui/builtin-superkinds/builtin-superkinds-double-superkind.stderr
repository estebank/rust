error[E0277]: `(T,)` cannot be sent between threads safely
  --> $DIR/builtin-superkinds-double-superkind.rs:6:32
   |
LL | impl <T: Sync+'static> Foo for (T,) { }
   |                                ^^^^ `(T,)` cannot be sent between threads safely
   |
   = help: within `(T,)`, the trait `Send` is not implemented for `(T,)`, which is required by `(T,): Send`
   = note: required because it appears within the type `(T,)`
note: required by a bound in `Foo`
  --> $DIR/builtin-superkinds-double-superkind.rs:4:13
   |
LL | trait Foo : Send+Sync { }
   |             ^^^^ required by this bound in `Foo`
help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement
   |
LL | impl <T: Sync+'static> Foo for (T,) where (T,): Send { }
   |                                     ++++++++++++++++

error[E0277]: `(T, T)` cannot be shared between threads safely
  --> $DIR/builtin-superkinds-double-superkind.rs:9:24
   |
LL | impl <T: Send> Foo for (T,T) { }
   |                        ^^^^^ `(T, T)` cannot be shared between threads safely
   |
   = help: within `(T, T)`, the trait `Sync` is not implemented for `(T, T)`, which is required by `(T, T): Sync`
   = note: required because it appears within the type `(T, T)`
note: required by a bound in `Foo`
  --> $DIR/builtin-superkinds-double-superkind.rs:4:18
   |
LL | trait Foo : Send+Sync { }
   |                  ^^^^ required by this bound in `Foo`
help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement
   |
LL | impl <T: Send> Foo for (T,T) where (T, T): Sync { }
   |                              ++++++++++++++++++

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0277`.
