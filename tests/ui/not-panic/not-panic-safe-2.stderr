error[E0277]: the type `Rc<RefCell<i32>>` may not be safely transferred across an unwind boundary
  --> $DIR/not-panic-safe-2.rs:10:14
   |
LL |     assert::<Rc<RefCell<i32>>>();
   |              ^^^^^^^^^^^^^^^^ `Rc<RefCell<i32>>` may not be safely transferred across an unwind boundary
   |
   = help: within `RefCell<i32>`, the trait `UnwindSafe` is not implemented for `Rc<RefCell<i32>>`, which is required by `Rc<RefCell<i32>>: UnwindSafe`
   = help: the trait `UnwindSafe` is implemented for `Rc<T, A>`
note: required because it appears within the type `RefCell<i32>`
  --> $SRC_DIR/core/src/cell.rs:LL:COL
   = note: required for `Rc<RefCell<i32>>` to implement `UnwindSafe`
note: required by a bound in `assert`
  --> $DIR/not-panic-safe-2.rs:7:14
   |
LL | fn assert<T: UnwindSafe + ?Sized>() {}
   |              ^^^^^^^^^^ required by this bound in `assert`

error[E0277]: the type `Rc<RefCell<i32>>` may not be safely transferred across an unwind boundary
  --> $DIR/not-panic-safe-2.rs:10:14
   |
LL |     assert::<Rc<RefCell<i32>>>();
   |              ^^^^^^^^^^^^^^^^ `Rc<RefCell<i32>>` may not be safely transferred across an unwind boundary
   |
   = help: within `RefCell<i32>`, the trait `UnwindSafe` is not implemented for `Rc<RefCell<i32>>`, which is required by `Rc<RefCell<i32>>: UnwindSafe`
   = help: the trait `UnwindSafe` is implemented for `Rc<T, A>`
note: required because it appears within the type `Cell<isize>`
  --> $SRC_DIR/core/src/cell.rs:LL:COL
note: required because it appears within the type `RefCell<i32>`
  --> $SRC_DIR/core/src/cell.rs:LL:COL
   = note: required for `Rc<RefCell<i32>>` to implement `UnwindSafe`
note: required by a bound in `assert`
  --> $DIR/not-panic-safe-2.rs:7:14
   |
LL | fn assert<T: UnwindSafe + ?Sized>() {}
   |              ^^^^^^^^^^ required by this bound in `assert`

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0277`.
