error[E0277]: the type `&RefCell<i32>` may not be safely transferred across an unwind boundary
  --> $DIR/not-panic-safe-4.rs:9:14
   |
LL |     assert::<&RefCell<i32>>();
   |              ^^^^^^^^^^^^^ `&RefCell<i32>` may not be safely transferred across an unwind boundary
   |
   = help: within `RefCell<i32>`, the trait `UnwindSafe` is not implemented for `&RefCell<i32>`, which is required by `&RefCell<i32>: UnwindSafe`
note: required because it appears within the type `RefCell<i32>`
  --> $SRC_DIR/core/src/cell.rs:LL:COL
   = note: required for `&RefCell<i32>` to implement `UnwindSafe`
note: required by a bound in `assert`
  --> $DIR/not-panic-safe-4.rs:6:14
   |
LL | fn assert<T: UnwindSafe + ?Sized>() {}
   |              ^^^^^^^^^^ required by this bound in `assert`
help: consider removing the leading `&`-reference
   |
LL -     assert::<&RefCell<i32>>();
LL +     assert::<RefCell<i32>>();
   |

error[E0277]: the type `&RefCell<i32>` may not be safely transferred across an unwind boundary
  --> $DIR/not-panic-safe-4.rs:9:14
   |
LL |     assert::<&RefCell<i32>>();
   |              ^^^^^^^^^^^^^ `&RefCell<i32>` may not be safely transferred across an unwind boundary
   |
   = help: within `RefCell<i32>`, the trait `UnwindSafe` is not implemented for `&RefCell<i32>`, which is required by `&RefCell<i32>: UnwindSafe`
note: required because it appears within the type `Cell<isize>`
  --> $SRC_DIR/core/src/cell.rs:LL:COL
note: required because it appears within the type `RefCell<i32>`
  --> $SRC_DIR/core/src/cell.rs:LL:COL
   = note: required for `&RefCell<i32>` to implement `UnwindSafe`
note: required by a bound in `assert`
  --> $DIR/not-panic-safe-4.rs:6:14
   |
LL | fn assert<T: UnwindSafe + ?Sized>() {}
   |              ^^^^^^^^^^ required by this bound in `assert`
help: consider removing the leading `&`-reference
   |
LL -     assert::<&RefCell<i32>>();
LL +     assert::<RefCell<i32>>();
   |

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0277`.
