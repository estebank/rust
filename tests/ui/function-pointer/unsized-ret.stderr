error[E0277]: expected a `Fn()` closure, found `fn() -> str`
  --> $DIR/unsized-ret.rs:10:11
   |
LL |     foo::<fn() -> str, _>(None, ());
   |           ^^^^^^^^^^^ expected an `Fn()` closure, found `fn() -> str`
   |
   = help: within `fn() -> str`, the trait `Fn<()>` is not implemented for `fn() -> str`, which is required by `fn() -> str: Fn<_>`
   = note: wrap the `fn() -> str` in a closure with no arguments: `|| { /* code */ }`
   = note: required because it appears within the type `fn() -> str`
note: required by a bound in `foo`
  --> $DIR/unsized-ret.rs:5:11
   |
LL | fn foo<F: Fn<T>, T:std::marker::Tuple>(f: Option<F>, t: T) {
   |           ^^^^^ required by this bound in `foo`

error[E0277]: expected a `Fn(&())` closure, found `for<'a> fn(&'a ()) -> (dyn std::fmt::Display + 'a)`
  --> $DIR/unsized-ret.rs:13:11
   |
LL |     foo::<for<'a> fn(&'a ()) -> (dyn std::fmt::Display + 'a), _>(None, (&(),));
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected an `Fn(&())` closure, found `for<'a> fn(&'a ()) -> (dyn std::fmt::Display + 'a)`
   |
   = help: within `for<'a> fn(&'a ()) -> (dyn std::fmt::Display + 'a)`, the trait `Fn<(&(),)>` is not implemented for `for<'a> fn(&'a ()) -> (dyn std::fmt::Display + 'a)`, which is required by `for<'a> fn(&'a ()) -> (dyn std::fmt::Display + 'a): Fn<_>`
   = note: required because it appears within the type `for<'a> fn(&'a ()) -> (dyn std::fmt::Display + 'a)`
note: required by a bound in `foo`
  --> $DIR/unsized-ret.rs:5:11
   |
LL | fn foo<F: Fn<T>, T:std::marker::Tuple>(f: Option<F>, t: T) {
   |           ^^^^^ required by this bound in `foo`

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0277`.
