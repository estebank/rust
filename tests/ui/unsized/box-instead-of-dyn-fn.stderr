error[E0746]: return type cannot have an unboxed trait object
  --> $DIR/box-instead-of-dyn-fn.rs:5:56
   |
LL | fn print_on_or_the_other<'a>(a: i32, b: &'a String) -> dyn Fn() + 'a {
   |                                                        ^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
help: return an `impl Trait` instead of a `dyn Trait`
   |
LL | fn print_on_or_the_other<'a>(a: i32, b: &'a String) -> impl Fn() + 'a {
   |                                                        ~~~~
help: alternatively, box the return type to make a boxed trait object, and wrap all of the returned values in `Box::new`
   |
LL ~ fn print_on_or_the_other<'a>(a: i32, b: &'a String) -> Box<dyn Fn() + 'a> {
LL |
LL |     if a % 2 == 0 {
LL ~         Box::new(move || println!("{a}"))
   |
help: finally, you might be able to borrow from the function's argument
   |
LL | fn print_on_or_the_other<'a>(a: i32, b: &'a String) -> &dyn Fn() + 'a {
   |                                                        +

error: aborting due to 1 previous error

For more information about this error, try `rustc --explain E0746`.
