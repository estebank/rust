error[E0277]: the `?` operator can only be used on `Result`s in a function that returns `Result`
  --> $DIR/question-mark-result-err-mismatch.rs:14:22
   |
LL | fn foo() -> Result<String, String> {
   | ---------------------------------- this function returns a `Result`
...
LL |         .map(|()| "")?;
   |                      ^ this `?` produces `Result<Infallible, ()>`, which is incompatible with `Result<String, String>`
   |
   = help: the trait `FromResidual<Result<Infallible, ()>>` is not implemented for `Result<String, String>`, which is required by `Result<String, String>: FromResidual<Result<Infallible, ()>>`
   = help: the following other types implement trait `FromResidual<R>`:
             <Result<T, F> as FromResidual<Yeet<E>>>
             <Result<T, F> as FromResidual<Result<Infallible, E>>>
   = note: required for `Result<String, String>` to implement `FromResidual<Result<Infallible, ()>>`

error[E0277]: the `?` operator can only be used on `Result`s in a function that returns `Result`
  --> $DIR/question-mark-result-err-mismatch.rs:28:25
   |
LL | fn bar() -> Result<(), String> {
   | ------------------------------ this function returns a `Result`
...
LL |         .map_err(|_| ())?;
   |                         ^ this `?` produces `Result<Infallible, ()>`, which is incompatible with `Result<(), String>`
   |
   = help: the trait `FromResidual<Result<Infallible, ()>>` is not implemented for `Result<(), String>`, which is required by `Result<(), String>: FromResidual<Result<Infallible, ()>>`
   = help: the following other types implement trait `FromResidual<R>`:
             <Result<T, F> as FromResidual<Yeet<E>>>
             <Result<T, F> as FromResidual<Result<Infallible, E>>>
   = note: required for `Result<(), String>` to implement `FromResidual<Result<Infallible, ()>>`

error[E0277]: the `?` operator can only be used on `Result`s in a function that returns `Result`
  --> $DIR/question-mark-result-err-mismatch.rs:48:11
   |
LL | fn baz() -> Result<String, String> {
   | ---------------------------------- this function returns a `Result`
...
LL |         })?;
   |           ^ this `?` produces `Result<Infallible, ()>`, which is incompatible with `Result<String, String>`
   |
   = help: the trait `FromResidual<Result<Infallible, ()>>` is not implemented for `Result<String, String>`, which is required by `Result<String, String>: FromResidual<Result<Infallible, ()>>`
   = help: the following other types implement trait `FromResidual<R>`:
             <Result<T, F> as FromResidual<Yeet<E>>>
             <Result<T, F> as FromResidual<Result<Infallible, E>>>
   = note: required for `Result<String, String>` to implement `FromResidual<Result<Infallible, ()>>`

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0277`.
